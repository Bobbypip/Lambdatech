// <auto-generated />
using Lambdatech;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lambdatech.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200615045313_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lambdatech.Entities.Dad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dads");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Juan Robles"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Rodrigo Lopez"
                        });
                });

            modelBuilder.Entity("Lambdatech.Entities.Mom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Moms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Maria Stink"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Romina Tumbado"
                        });
                });

            modelBuilder.Entity("Lambdatech.Entities.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Schools");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Instituto Kipling",
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Instituto Benavente",
                            StudentId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Instituto Capistrano",
                            StudentId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Instituto Capistrano",
                            StudentId = 3
                        });
                });

            modelBuilder.Entity("Lambdatech.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DadId")
                        .HasColumnType("int");

                    b.Property<int>("MomId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DadId");

                    b.HasIndex("MomId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DadId = 1,
                            MomId = 1,
                            Name = "Mario Robles Stink"
                        },
                        new
                        {
                            Id = 2,
                            DadId = 2,
                            MomId = 2,
                            Name = "Erick Lopez Tumbado"
                        },
                        new
                        {
                            Id = 3,
                            DadId = 2,
                            MomId = 2,
                            Name = "Martin Lopez Tumbado"
                        });
                });

            modelBuilder.Entity("Lambdatech.Entities.School", b =>
                {
                    b.HasOne("Lambdatech.Entities.Student", "Student")
                        .WithMany("Schools")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lambdatech.Entities.Student", b =>
                {
                    b.HasOne("Lambdatech.Entities.Dad", "Dad")
                        .WithMany("Students")
                        .HasForeignKey("DadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lambdatech.Entities.Mom", "Mom")
                        .WithMany("Students")
                        .HasForeignKey("MomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
